# ==================================================
# Grille
# ==================================================

# A light reinterpretation of Mutable Instruments Grids

# [Master]
# Input 1:    Clock
# Input 2:    Reset
# Input 3:
# Input 4:
# Input 5:
# Input 6:
# Input 7:
# Input 8:
# Output 1:   Bassdrum trigger
# Output 2:   Snare trigger
# Output 3:   Hihat trigger
# Output 4:
# Output 5:   Melody trigger
# Output 6:   Meleody Pitch
# Output 7:
# Output 8:   Clock

[p2b8]
# Pot 1.1:    Bassdrum Activity
# Pot 1.2:    Snare Activity
# Button 1.1  Bassdrum mute
# Button 1.2: Bassdrum dice
# Button 1.3: Snare mute
# Button 1.4: Snare dice
# Button 1.5: Hihat mute
# Button 1.6: HiHat dice
# Button 1.7: Meleody mute
# Button 1.8: Melody next pattern

[p2b8]
# Pot 2.1:    Hihat Activity
# Pot 2.2:
# Button 2.1: Bassdrum 4 on the floor
# Button 2.2: Bassdrum branches selection
# Button 2.3: Snaredrum 4 between each kick
# Button 2.4: Snaredrum branches selection
# Button 2.5:
# Button 2.6: Hihat branches selection
# Button 2.7: Melody pattern length. Switch between 3/7/16/24
# Button 2.8: Melody branches selection

[p10]
# Pot 3.1:     Melody activity
# Pot 3.2:     Melody variation
# Pot 3.3:     Melody déjàvu
# Pot 3.4:     Melody morphs
# Pot 3.5:
# Pot 3.6:
# Pot 3.7:
# Pot 3.8:
# Pot 3.9:
# Pot 3.10:





# --------------------------------------------------
# Clock
# --------------------------------------------------

# A 120bpm lfo is normalized to N1 so when no clock is patched into I1, there's
# a default bpm of 120
[lfo]
    hz = 2
    square = N1

[copy]
    input = I1
    output = O8

[clocktool]
    clock = I1
    multiply = 4
    output = _CLOCK



# --------------------------------------------------
# Bassdrum
# --------------------------------------------------

# Branche selection
[fourstatebutton]
    button = B2.2
    led = L2.2
    value1 = 0
    value2 = 1
    value3 = 2
    value4 = 3
    output = _BD_BRANCHES



# Generate random triggers
[algoquencer]
    clock = _CLOCK
    reset = I2
    activity = P1.1
    reroll = B1.2
    trigger = _BD_TRIG_ALGO
    branches = _BD_BRANCHES



# Activate four on the floor triggers
[togglebutton]
    button = B2.1
    led = L2.1

# Convert clock gate to 4/4 trigger
# Clock are gate signal and we need triggers
[clocktool]
    clock = _CLOCK
    divide = 4
    dutycycle = 0.1
    output = _TRIG_44

# If the led is activated the /4 trigger are unmuted
[logic]
    input1 = L2.1
    input2 = _TRIG_44 # /4 rythme
    and = _BD_TRIG_44



# Merge algoquencer and /4 triggers
[logic]
    input1 = _BD_TRIG_ALGO
    input2 = _BD_TRIG_44
    or = _BD_TRIG



# Mute button for the whole bassdrum section
[togglebutton]
    button = B1.1
    led = L1.1



# Check if bassdrum is muted
# Negate led output to imitate algoquencer mute button states
[logic]
    input1 = L1.1
    negated = _BD_MUTE

[logic]
    input1 = _BD_TRIG
    input2 = _BD_MUTE
    and = O1





# --------------------------------------------------
# Snare
# --------------------------------------------------

# Branche selection
[fourstatebutton]
    button = B2.4
    led = L2.4
    value1 = 0
    value2 = 1
    value3 = 2
    value4 = 3
    output = _SD_BRANCHES



# Generate random triggers
[algoquencer]
    clock = _CLOCK
    reset = I2
    activity = P1.2
    reroll = B1.4
    trigger = _SD_TRIG_ALGO
    branches = _SD_BRANCHES



# Activate four on the floor triggers
[togglebutton]
    button = B2.3
    led = L2.3

# Convert clock gate to 4/4 trigger
# Clock are gate signal and we need triggers
# Triggers are delayed to kick between each bassdrum
[clocktool]
    clock = _CLOCK
    divide = 4
    dutycycle = 0.1
    delay = 0.25
    output = _TRIG_44_50

# If the led is activated the /4 trigger are unmuted
[logic]
    input1 = L2.3
    input2 = _TRIG_44_50
    and = _SD_TRIG_44



# Merge algoquencer and /4 triggers
[logic]
    input1 = _SD_TRIG_ALGO
    input2 = _SD_TRIG_44
    or = _SD_TRIG



# Mute button for the whole snare section
[togglebutton]
    button = B1.3
    led = L1.3



# Check if snare is muted
# Negate led output to imitate algoquencer mute button states
[logic]
    input1 = L1.3
    negated = _SD_MUTE

[logic]
    input1 = _SD_TRIG
    input2 = _SD_MUTE
    and = O2





# --------------------------------------------------
# Hihat
# --------------------------------------------------

# Branche selection
[fourstatebutton]
    button = B2.6
    led = L2.6
    value1 = 0
    value2 = 1
    value3 = 2
    value4 = 3
    output = _HH_BRANCHES

# Generate random triggers
[algoquencer]
    clock = _CLOCK
    reset = I2
    activity = P2.1
    mutebutton = B1.5
    muteled = L1.5
    reroll = B1.6
    trigger = O3
    branches = _HH_BRANCHES





# --------------------------------------------------
# Melody
# --------------------------------------------------

# Branche selection
[fourstatebutton]
    button = B2.8
    led = L2.8
    value1 = 0
    value2 = 1
    value3 = 2
    value4 = 3
    output = _MELODY_BRANCHES

[random]
    clock = _CLOCK
    output = _MELODY_GATE_LENGTH
    minimum = 0.5V
    maximum = 2V

[fourstatebutton]
    button = B2.7
    led = L2.7
    value1 = 3
    value2 = 7
    value3 = 16
    value4 = 24
    output = _MELODY_PATTERN_LENGTH

[algoquencer]
    clock = _CLOCK
    pitch = _UNQUANTIZED_PITCH
    gate = O5
    length = _MELODY_PATTERN_LENGTH
    mutebutton = B1.7
    muteled = L1.7
    nextpattern = B1.8
    dejavu = P3.3
    morphs = P3.4
    activity = P3.1
    variation = P3.2
    fills = P3.5
    fillorder = 3
    gatelength = _MELODY_GATE_LENGTH
    branches = _MELODY_BRANCHES

[minifonion]
    input = _UNQUANTIZED_PITCH
    root = 0 # C
    degree = 7 # natural minor
    output = O6
